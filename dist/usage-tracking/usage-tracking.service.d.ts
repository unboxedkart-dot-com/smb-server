import { Model } from 'mongoose';
import { User } from 'src/models/user.model';
import { Product } from 'src/models/product.model';
import { AddSearchedTermDto } from './dtos/add-searched-term.dto';
import { AddWishlistItemDto } from './dtos/add-wishlist-item.dto';
import { RemoveWishlistItemDto } from './dtos/remove-wishlist-item.dto';
import { AddCartItemDto } from './dtos/add-cart-item.dto';
import { RemoveCartItemDto } from './dtos/remove-cart-item.dto';
import { TrackingNotificationModel } from 'src/models/Tracking-notification.model';
import { AddViewedProductDto } from './dtos/add-viewed-product.dto';
import { clickedOnNeedMoreDiscountDto } from './dtos/clicked-on-need-more-discount.dto';
import { CarouselItem } from 'src/models/carousel_item.model';
export declare class UsageTrackingControllerService {
    private readonly userModel;
    private readonly productModel;
    private readonly trackingNotificationModel;
    private readonly carouselItemModel;
    constructor(userModel: Model<User>, productModel: Model<Product>, trackingNotificationModel: Model<TrackingNotificationModel>, carouselItemModel: Model<CarouselItem>);
    getNotifications(type: String): Promise<TrackingNotificationModel[]>;
    addSearchedItem(userId: String, data: AddSearchedTermDto): Promise<void>;
    addClickedOnBuyNow(userId: String, data: AddViewedProductDto): Promise<void>;
    addViewedProduct(userId: String, data: AddViewedProductDto): Promise<void>;
    addWishlistItem(userId: String, data: AddWishlistItemDto): Promise<void>;
    removeWishlistItem(userId: String, data: RemoveWishlistItemDto): Promise<void>;
    addCartItem(userId: String, data: AddCartItemDto): Promise<void>;
    removeCartItem(userId: String, data: RemoveCartItemDto): Promise<void>;
    addClickedOnCall(userId: string): Promise<void>;
    clickedOnNeedMoreDiscount(userId: string, data: clickedOnNeedMoreDiscountDto): Promise<void>;
    KnowMoreAboutUnboxedkart(userId: string): Promise<void>;
    KnowMoreAboutStorePickup(userId: string): Promise<void>;
    findStores(userId: string): Promise<void>;
    handleViewedCarouselItem(userId: string, carouselId: string): Promise<void>;
}
